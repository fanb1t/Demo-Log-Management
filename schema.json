{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "CanonicalEventSchema",
    "description": "Canonical event schema (centralized) for ingesting logs/events from multiple sources.",
    "type": "object",
    "properties": {
        "@timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Event time in RFC3339/ISO8601 (UTC recommended)."
        },
        "event_id": {
            "type": "string",
            "description": "Optional UUID for the event generated by ingest pipeline."
        },
        "tenant": {
            "type": "string",
            "description": "Tenant / customer identifier (required for multi-tenant systems)."
        },
        "source": {
            "type": "string",
            "enum": [
                "firewall",
                "crowdstrike",
                "aws",
                "m365",
                "ad",
                "api",
                "network"
            ],
            "description": "Source system type (canonical enum)."
        },
        "vendor": {
            "type": "string",
            "description": "Vendor name (e.g. paloalto, microsoft, crowdstrike)."
        },
        "product": {
            "type": "string",
            "description": "Product name/version (e.g. pan-os, falcon)."
        },
        "event_type": {
            "type": "string",
            "description": "High-level event category (e.g. auth, network-connection, process)."
        },
        "event_subtype": {
            "type": "string",
            "description": "More specific event subtype (e.g. login-success, http-request)."
        },
        "severity": {
            "type": "integer",
            "minimum": 0,
            "maximum": 10,
            "description": "Normalized severity on scale 0â€“10."
        },
        "action": {
            "type": "string",
            "enum": [
                "allow",
                "deny",
                "create",
                "delete",
                "login",
                "logout",
                "alert"
            ],
            "description": "Canonical action taken or observed."
        },
        "src_ip": {
            "type": "string",
            "description": "Source IP address (IPv4 or IPv6).",
            "anyOf": [
                {
                    "format": "ipv4"
                },
                {
                    "format": "ipv6"
                }
            ]
        },
        "src_port": {
            "type": [
                "integer",
                "null"
            ],
            "minimum": 0,
            "maximum": 65535,
            "description": "Source port (0-65535) or null if not applicable."
        },
        "dst_ip": {
            "type": "string",
            "description": "Destination IP address (IPv4 or IPv6).",
            "anyOf": [
                {
                    "format": "ipv4"
                },
                {
                    "format": "ipv6"
                }
            ]
        },
        "dst_port": {
            "type": [
                "integer",
                "null"
            ],
            "minimum": 0,
            "maximum": 65535,
            "description": "Destination port (0-65535) or null if not applicable."
        },
        "protocol": {
            "type": "string",
            "description": "Transport/application protocol (e.g. tcp, udp, icmp, http, dns)."
        },
        "user": {
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "domain": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": true
                }
            ],
            "description": "User info (simple string or object with id/name/domain)."
        },
        "host": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "description": "Host information (hostname, id, OS, etc.)."
        },
        "process": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "path": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "description": "Process information when applicable."
        },
        "url": {
            "type": "string",
            "description": "Full URL (if event is HTTP/URL related)."
        },
        "http_method": {
            "type": "string",
            "description": "HTTP method (GET, POST, PUT, DELETE, ...)."
        },
        "status_code": {
            "type": [
                "integer",
                "null"
            ],
            "description": "HTTP status code if applicable."
        },
        "rule_name": {
            "type": "string",
            "description": "Name of detection/rule/policy that triggered (if any)."
        },
        "rule_id": {
            "type": "string",
            "description": "Identifier of the rule/policy."
        },
        "cloud": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "description": "Cloud-specific metadata (if event originates from cloud)."
        },
        "raw": {
            "description": "Raw/original payload from source. Store full original event here.",
            "oneOf": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "_tags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "Array of tags/classifications (e.g. ['network','threat-intel'])."
        },
        "schema_version": {
            "type": "string",
            "description": "Version of the canonical schema used (e.g. 1.0.0)."
        },
        "ingest": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "pipeline": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "description": "Metadata about ingestion (when/where/how it was ingested)."
        },
        "original": {
            "type": "object",
            "description": "Optional: vendor-specific/original parsed fields (keep vendor raw fields here).",
            "additionalProperties": true
        }
    },
    "required": [
        "@timestamp",
        "tenant",
        "source",
        "event_type",
        "raw"
    ],
    "additionalProperties": true
}